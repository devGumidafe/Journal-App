{"version":3,"sources":["firebase/firebaseConfig.js","types/types.js","actions/ui.js","actions/notes.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/routers/AuthRouter.js","components/routers/PrivateRoute.js","components/routers/PublicRoute.js","components/routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","error","type","payload","removeError","startLoading","finishLoading","activeNote","id","note","addNewNote","startLoadingNotes","uid","dispatch","a","loadNotes","notes","setNotes","collection","orderBy","get","notesSnap","forEach","push","data","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","deleteNote","login","displayName","startLogout","signOut","then","logout","catch","messageError","message","text","icon","confirmButtonText","JournalEntry","props","useDispatch","noteDate","moment","date","className","onClick","style","backgroundSize","backgroundImage","format","JournalEntries","useSelector","state","map","Sidebar","name","newNote","Date","getTime","add","docRef","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","value","NotesAppBar","active","display","onChange","e","files","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","JournalScreen","LoginScreen","ui","msgError","loading","email","password","isFormValid","validator","isEmail","isEmpty","isLength","min","onSubmit","preventDefault","signInWithEmailAndPassword","user","finally","startLoginEmailPassword","disabled","signInWithPopup","to","RegisterScreen","confirmPassword","equals","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","override","css","onAuthStateChanged","size","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a10176f4.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDYQ2ZgeW6Y8n9dRo_4f3xKrPceVo6wzIs\",\n    authDomain: \"react-app-cursos-13c85.firebaseapp.com\",\n    projectId: \"react-app-cursos-13c85\",\n    storageBucket: \"react-app-cursos-13c85.appspot.com\",\n    messagingSenderId: \"516871489581\",\n    appId: \"1:516871489581:web:594a52641c5aabd91090a4\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n}\n\n","export const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: ' [UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Update note',\n    notesFileUrl: '[Notes] Update image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\n}","import { types } from \"../types/types\"\n\nexport const setError = (error) => {\n    return {\n        type: types.uiSetError,\n        payload: error\n    }\n}\n\nexport const removeError = () => {\n    return {\n        type: types.uiRemoveError\n    }\n}\n\nexport const startLoading = () => {\n    return {\n        type: types.uiStartLoading\n    }\n}\n\nexport const finishLoading = () => {\n    return {\n        type: types.uiFinishLoading\n    }\n}","import { db } from \"../firebase/firebaseConfig\";\nimport { types } from \"../types/types\";\nimport Swal from 'sweetalert2';\n\nexport const startNewNote = () => {\n    return async (dispatch, getState) => {\n\n        // Obtenemos el uid del usuario\n        const { uid } = getState().auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const docRef = await db.collection(`${uid}/journal/notes`).add(newNote);\n\n        dispatch(activeNote(docRef.id, newNote));\n        \n        dispatch(addNewNote(docRef.id, newNote));\n    }\n}\n\nexport const activeNote = (id, note) => {\n    return {\n        type: types.notesActive,\n        payload: {\n            id,\n            ...note\n        }\n    }\n}\n\nexport const addNewNote = (id, note) => {\n    return {\n        type: types.notesAddNew,\n        payload: {\n            id, ...note\n        }\n    }\n}\n\nexport const startLoadingNotes = (uid) => {\n    return async (dispatch) => {\n        const notes = await loadNotes(uid);\n        dispatch(setNotes(notes));\n    }\n}\n\nexport const setNotes = (notes) => {\n    return {\n        type: types.notesLoad,\n        payload: notes\n    }\n}\n\nexport const loadNotes = async (uid) => {\n    const notesSnap = await db.collection(`${uid}/journal/notes`).orderBy('date', 'desc').get();\n    const notes = [];\n\n    notesSnap.forEach(note => {\n        notes.push({\n            id: note.id,\n            ...note.data()\n        })\n    });\n\n    return notes;\n}\n\nexport const startSaveNote = (note) => {\n    return async (dispatch, getState) => {\n\n        const { uid } = getState().auth;\n\n        if (!note.url) {\n            delete note.url;\n        }\n\n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n\n        dispatch(refreshNote(note.id, note));\n\n        Swal.fire('Save', note.title, 'success');\n    }\n}\n\nexport const refreshNote = (id, note) => {\n    return {\n        type: types.notesUpdated,\n        payload: {\n            id,\n            note\n        }\n    }\n}\n\nexport const startUploading = (file) => {\n    return async (dispatch, getState) => {\n\n        const { active: activeNote } = getState().notes;\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload(file);\n        activeNote.url = fileUrl;\n\n        dispatch(startSaveNote(activeNote));\n\n        Swal.close();\n    }\n}\n\nexport const fileUpload = async (file) => {\n\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/gumi-cloud/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset', 'react-journal');\n    formData.append('file', file);\n\n    try {\n\n        const resp = await fetch(cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if (resp.ok) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            throw await resp.json();\n        }\n\n    } catch (error) {\n        throw error;\n    }\n\n}\n\nexport const startDeleting = (id) => {\n    return async (dispatch, getState) => {\n\n        const { uid } = getState().auth;\n\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\n\n        dispatch(deleteNote(id));\n    }\n}\n\nexport const deleteNote = (id) => {\n    return {\n        type: types.notesDelete,\n        payload: id\n    }\n}\n\nexport const noteLogout = () => {\n    return {\n        type: types.notesLogoutCleaning\n    }\n}","import { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\nimport Swal from 'sweetalert2';\nimport { types } from \"../types/types\";\nimport { finishLoading, startLoading } from './ui';\nimport { noteLogout } from './notes';\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n        dispatch(startLoading());\n\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(({ user }) => {\n\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n            }).catch(error => {\n                messageError(error.message);\n            }).finally(() => {\n                dispatch(finishLoading());\n            })\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n    return (dispatch) => {\n        dispatch(startLoading());\n\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(async ({ user }) => {\n                await user.updateProfile({ displayName: name });\n\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n            })\n            .catch(error => {\n                messageError(error.message);\n            }).finally(() => {\n                dispatch(finishLoading());\n            })\n    }\n\n}\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n\n        firebase.auth().signInWithPopup(googleAuthProvider)\n            .then(({ user }) => {\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n            }).catch(error => {\n                messageError(error.message);\n            })\n    }\n}\n\nexport const login = (uid, displayName) => {\n    return {\n        type: types.login,\n        payload: {\n            uid,\n            displayName\n        }\n    }\n}\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        firebase.auth().signOut()\n            .then(() => {\n                dispatch(logout());\n\n                dispatch(noteLogout());\n\n            }).catch(error => {\n                messageError(error.message);\n            })\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: types.logout\n    }\n}\n\nexport const messageError = (error) => {\n    Swal.fire({\n        title: 'Error!',\n        text: error,\n        icon: 'error',\n        confirmButtonText: 'Ok'\n    })\n}","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ ...props }) => {\n\n    const dispatch = useDispatch();\n    const noteDate = moment(props.date);\n\n    const handleEntryClick = () => {\n        dispatch(\n            activeNote(props.id, {\n                ...props\n            })\n        );\n    }\n\n    return (\n        <div\n            className=\"journal__entry pointer animate__animated animate__fadeInRight\"\n            onClick={handleEntryClick}\n        >\n            {\n                (props.url)\n                &&\n                <div\n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${props.url})`\n                    }}\n                >\n                </div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal-entry-title\">\n                    {props.title}\n                </p>\n                <p className=\"journal-entry-content\">\n                    {props.body}\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\" >\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{noteDate.format('D')}</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry'\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector(state => state.notes);\n\n    return (\n        <div className=\"journal__entries\">\n            {\n                notes.map(note => (\n                    <JournalEntry\n                        key={note.id}\n                        {...note}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    const handleAddNew = () => {\n        dispatch(startNewNote());\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name}</span>\n                </h3>\n                <button\n                    className=\"btn\"\n                    onClick={handleLogout}\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div\n                className=\"journal__new-entry\"\n                onClick={handleAddNew}\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n            </p>\n            </div>\n\n            <JournalEntries />\n        </aside>\n    )\n}\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState) => {\n        setValues(newFormState);\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [values, handleInputChange, reset];\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes'\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active: note } = useSelector(state => state.notes);\n\n    const handleSave = () => {\n        dispatch(startSaveNote(note));\n    }\n\n    const handlePictureUpload = () => {\n        document.querySelector('#fileSelector').click()\n\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n\n        if (file) {\n            dispatch(startUploading(file));\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span> 28 de agosto 2020</span>\n\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none' }}\n                onChange={handleFileChange}\n            />\n\n            <div>\n                <button\n                    className=\"btn\"\n                    onClick={handlePictureUpload}\n                >\n                    Picture\n                </button>\n\n                <button\n                    className=\"btn\"\n                    onClick={handleSave}\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDeleting } from '../../actions/notes'\nimport { useForm } from '../../hooks/useForm'\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const { active: note } = useSelector(state => state.notes)\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange, reset] = useForm(note);\n    const { title, body, id } = formValues;\n\n    const activeId = useRef(note.id);\n\n    useEffect(() => {\n\n        if (note.id !== activeId.current) {\n            reset(note);\n            activeId.current = note.id;\n        }\n    }, [note, reset])\n\n    useEffect(() => {\n\n        dispatch(activeNote(formValues.id, { ...formValues }));\n\n    }, [formValues, dispatch])\n\n    const handleDelete = () => {\n        dispatch(startDeleting(id))\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n\n            <NotesAppBar />\n\n            <div \n            className=\"notes__content animate__animated animate__fadeInRight\"\n            >\n                <input\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    placeholder=\"What happend today?\"\n                    name=\"body\"\n                    className=\"notes__textarea\"\n                    value={body}\n                    onChange={handleInputChange}\n                >\n                </textarea>\n\n                {\n                    (note.url)\n                    &&\n                    <div className=\"notes__image\">\n                        <img\n                            src={note.url}\n                            alt=\"imagen\"\n                        />\n                    </div>\n                }\n            </div>\n\n            <button\n                className=\"btn btn-danger\"\n                onClick={handleDelete}\n            >\n                Delete\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div \n        className=\"nothing__main-content animate__animated animate__fadeIn\"\n        >\n            <p>\n                Select something\n                <br />\n                or creaty an entry!\n            </p>\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes);\n\n    return (\n        <div\n            className=\"journal__main-content animate__animated animate__fadeIn\"\n        >\n            <Sidebar />\n            <main>\n                {\n                    (active)\n                        ? (<NoteScreen />)\n                        : (<NothingSelected />)\n                }\n            </main>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { removeError, setError } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError, loading } = useSelector(state => state.ui);// Extrae el estado\n\n    const [formValues, handleInputChange] = useForm({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        if (isFormValid()) {\n            dispatch(startLoginEmailPassword(email, password))\n        }\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch(startGoogleLogin());\n    }\n\n    const isFormValid = () => {\n        if (!validator.isEmail(email)) {\n            dispatch(setError('Email no válido'))\n            return false;\n\n        } else if (validator.isEmpty(password) || !validator.isLength(password, { min: 6 })) {\n            dispatch(setError('El password no es válido, mínimo 6 caracteres'))\n            return false;\n        }\n\n        dispatch(removeError());\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form\n                onSubmit={handleLogin}\n                className=\"animate__animated animate__fadeIn\"\n            >\n\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            {msgError}\n                        </div>\n                    )\n                }\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={loading}\n                >\n                    Login\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n                    <div\n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link\n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account\n                </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\nimport { setError, removeError } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError, loading } = useSelector(state => state.ui);// Extrae el estado\n\n    const [formValues, handleInputChange] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const { name, email, password, confirmPassword } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (isFormValid()) {\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\n        }\n    }\n\n    const isFormValid = () => {\n        if (validator.isEmpty(name)) {\n            dispatch(setError('El nombre es requerido'));\n            return false;\n\n        } else if (!validator.isEmail(email)) {\n            dispatch(setError('Email no válido'))\n            return false;\n\n        } else if (validator.isEmpty(password) || !validator.isLength(password, { min: 6 })) {\n            dispatch(setError('El password no es válido, mínimo 6 caracteres'))\n            return false;\n\n        } else if (validator.isEmpty(password) || !validator.isLength(confirmPassword, { min: 6 })) {\n            dispatch(setError('El confirm password no es válido, mínimo 6 caracteres'))\n            return false;\n\n        } else if (!validator.equals(password, confirmPassword)) {\n            dispatch(setError('Los passwords no coincide'))\n            return false;\n        }\n\n        dispatch(removeError());\n        return true;\n    }\n\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form\n                onSubmit={handleRegister}\n                className=\"animate__animated animate__fadeIn\"\n            >\n\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            {msgError}\n                        </div>\n                    )\n                }\n\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"confirmPassword\"\n                    className=\"auth__input\"\n                    value={confirmPassword}\n                    onChange={handleInputChange}\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                    disabled={loading}\n                >\n                    Register\n            </button>\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already register?\n                </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport { LoginScreen } from '../auth/LoginScreen';\nimport { RegisterScreen } from '../auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route exact path=\"/auth/login\" component={LoginScreen} />\n                    <Route exact path=\"/auth/register\" component={RegisterScreen} />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to='/auth/login' />\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? <Redirect to='/' />\n                    : <Component {...props} />\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    Switch\n} from \"react-router-dom\";\nimport { firebase } from '../../firebase/firebaseConfig';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { css } from \"@emotion/react\";\nimport { login } from '../../actions/auth';\nimport { JournalScreen } from '../journal/JournalScreen';\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    const override = css`\n                display: block;\n                margin: 0 auto;\n                border-color: #5C62C5;\n            `;\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(async (user) => {\n\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName));\n                setIsLoggedIn(true);\n\n                dispatch(startLoadingNotes(user.uid))\n\n            } else {\n                setIsLoggedIn(false);\n            }\n\n            setChecking(false);\n        });\n\n    }, [dispatch, setChecking, setIsLoggedIn])\n\n    return (\n        <Router>\n            <ClipLoader loading={checking} css={override} size={100} />\n\n            <Switch>\n                <PublicRoute path=\"/auth\" component={AuthRouter} isAuthenticated={isLoggedIn} />\n                <PrivateRoute exact path=\"/\" component={JournalScreen} isAuthenticated={isLoggedIn} />\n\n                <Redirect to=\"/auth/login\" />\n            </Switch>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n\n};\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n\n        case types.notesAddNew: {\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n        }\n\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [...action.payload]\n            }\n\n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(note =>\n                    note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n\n        case types.notesDelete: {\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter(note => note.id !== action.payload)\n            }\n        }\n\n        case types.notesLogoutCleaning: {\n            return {\n                ...state,\n                active: null,\n                notes: []\n            }\n        }\n\n        default:\n            return state;\n    }\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { authReducer } from \"../reducers/authReducer\";\nimport { uiReducer } from \"../reducers/uiReducer\";\nimport { notesReducer } from \"../reducers/notesReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n   auth: authReducer,\n   ui: uiReducer,\n   notes: notesReducer\n})\n\nexport const store = createStore(\n   reducers,\n   composeEnhancers(\n      applyMiddleware(thunk)\n   )\n\n);","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n\n        case types.logout:\n            return {}\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './components/routers/AppRouter';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}